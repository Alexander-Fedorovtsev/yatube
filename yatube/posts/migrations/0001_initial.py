# Generated by Django 2.2.6 on 2021-06-11 13:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    # replaces = [('posts', '0001_initial'), ('posts', '0002_auto_20210605_1546'), ('posts', '0003_auto_20210606_1615'), ('posts', '0004_follow'), ('posts', '0005_auto_20210608_1753')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter community name', max_length=200, verbose_name='Community name')),
                ('slug', models.SlugField(help_text='Enter community url', unique=True, verbose_name='Community url')),
                ('description', models.TextField(help_text='Enter community description', max_length=200, verbose_name='Community description')),
            ],
            options={
                'verbose_name': 'Community',
                'verbose_name_plural': 'Communities',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Enter text here', verbose_name='Post text')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Date published')),
                ('author', models.ForeignKey(help_text='Enter author of text', on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, help_text='Enter community for your text', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='posts.Group', verbose_name='Community')),
                ('image', models.ImageField(blank=True, help_text='Add image here', null=True, upload_to='posts/', verbose_name='Image')),
            ],
            options={
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Enter comment here', verbose_name='Comment text')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data and time of published comment')),
                ('author', models.ForeignKey(help_text='Enter author of comment', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(help_text='Enter post to comment', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='posts.Post')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(help_text='Enter user when you subscribe', on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='Following')),
                ('user', models.ForeignKey(help_text='Enter user-follower', on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL, verbose_name='Follower')),
            ],
            options={
                'ordering': ('-date_follow',),
            },
        ),
    ]
